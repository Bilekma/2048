import pygame
import random
pygame.init()

#zacatek
sirka = 400
vyska = 500
screen = pygame.display.set_mode([sirka, vyska])
pygame.display.set_caption('2048')
timer = pygame.time.Clock()
fps = 32
font = pygame.font.Font('freesansbold.ttf', 20)

# 2048 color library
colors = {0: (204, 192, 179),
          2: (238, 228, 218),
          4: (237, 224, 200),
          8: (242, 177, 121),
          16: (245, 149, 99),
          32: (246, 124, 95),
          64: (246, 94, 59),
          128: (237, 207, 114),
          256: (237, 204, 97),
          512: (237, 200, 80),
          1024: (237, 197, 63),
          2048: (237, 194, 46),
          'light text': (249,246,242),
          'dark text': (119, 110, 101),
          'other': (0, 0, 0),
          'pozadí':(187,173,160)}

#game variables initialize
board_values = [[0 for _ in range(4)] for _ in range(4)]
game_over = False
spawn_new = True
init_count = 0
direction = ' '
score = 0
vyhra = False

#zmáčknutí šipky a posunutí hracího pole
def take_turn(direc, board):
    full = True
    global score
    pohyb = False
    global vyhra
    merged = [[False for _ in range(4)] for _ in range(4)]
    if direc == 'UP':
        for i in range(4):
            for j in range(4):
                shift = 0
                if i > 0:
                    for q in range(i):
                        if board[q][j] == 0:
                            shift += 1
                    if shift > 0:
                        if board[i][j] != 0:
                            pohyb = True
                        board[i - shift][j] = board[i][j]
                        board[i][j] = 0
                    if board[i - shift - 1][j] == board[i - shift][j] and not merged[i - shift - 1][j]:
                        board[i - shift - 1][j] = board[i - shift - 1][j] * 2
                        board[i - shift][j] = 0
                        merged[i - shift - 1][j] = True
                        score += board[i - shift - 1][j]
                        if board[i - shift - 1][j] != 0:
                            pohyb = True
                        if board[i - shift - 1][j] == 2048:
                            vyhra = True
    elif direc == 'DOWN':
        for i in range(2, -1, -1):
            for j in range(4):
                shift = 0
                for q in range(3-i):
                    if board[3-q][j] == 0:
                        shift += 1
                if shift > 0:
                    if board[i][j] != 0:
                        pohyb = True
                    board[i + shift][j] = board[i][j]
                    board[i][j] = 0
                if i + shift != 3:
                    if board[i + shift][j] == board[i + shift + 1][j] and not merged[i + shift + 1][j]:
                        board[i + shift + 1][j] *= 2
                        board[i + shift][j] = 0
                        merged[i + shift + 1][j] = True
                        score += board[i + shift + 1][j]
                        if board[i + shift + 1][j] != 0:
                            pohyb = True
                        if board[i + shift + 1][j] == 2048:
                            vyhra = True
    elif direc == 'RIGHT':
        for i in range(4):
            for j in range(2, -1, -1):
                shift = 0
                for q in range(3-j):
                    if board[i][3-q] == 0:
                        shift += 1
                if shift > 0:
                    if board[i][j] != 0:
                        pohyb = True
                    board[i][j + shift] = board[i][j]
                    board[i][j] = 0
                if j + shift != 3:
                    if board[i][j + shift] == board[i][j + shift + 1] and not merged[i][j + shift + 1]:
                        board[i][j + shift + 1] *= 2
                        board[i][j + shift] = 0
                        merged[i][j + shift + 1] = True
                        score += board[i][j + shift + 1]
                        if board[i][j + shift + 1] != 0:
                            pohyb = True
                        if board[i][j + shift + 1] == 2048:
                            vyhra = True
    elif direc == 'LEFT':
        for i in range(4):
            for j in range(4):
                shift = 0
                if j > 0:
                    for q in range(j):
                        if board[i][q] == 0:
                            shift += 1
                    if shift > 0:
                        if board[i][j] != 0:
                            pohyb = True
                        board[i][j - shift] = board[i][j]
                        board[i][j] = 0
                    if board[i][j - shift - 1] == board[i][j - shift] and not merged[i][j - shift - 1]:
                        board[i][j - shift - 1] = board[i][j - shift - 1] * 2
                        board[i][j - shift] = 0
                        merged[i][j - shift - 1] = True
                        score += board[i][j - shift - 1]
                        if board[i][j - shift - 1] != 0:
                            pohyb = True
                        if board[i][j - shift - 1] == 2048:
                            vyhra = True
    for i in range(4):
        for j in range(4):
            if board[i][j] == 0:
                full = False

    return board, pohyb, full, vyhra


#tvoření nových čtverečků na začátku kola
def new_pieces(board):
    count = 0
    while any(0 in row for row in board) and count < 1:
        row = random.randint(0,3)
        col = random.randint(0,3)
        if board[row][col] == 0:
            count += 1
            if random.randint(1,10) == 10:
                board[row][col] = 4
            else:
                board[row][col] = 2
    return board


#pozadí plochy
def draw_plocha():
    pygame.draw.rect(screen, colors['pozadí'],[0, 0, 400, 400], 0, 10)
    pass

#kosticky
def draw_kost(board):
    for i in range(4):
        for j in range(4):
            value = board[i][j]
            if value > 8:
                value_color = colors['light text']
            else:
                value_color = colors['dark text']
            if value <= 2048:
                color = colors[value]
            else:
                color = colors['other']
            pygame.draw.rect(screen, color, [j * 95 + 20, i * 95 + 20, 75, 75], 0, 15)
            if value > 0:
                value_len = len(str(value))
                font = pygame.font.Font('freesansbold.ttf', 40 - (4 * value_len))
                value_text = font.render(str(value), True, value_color)
                text_rect = value_text.get_rect(center=(j * 95 + 20 + 37, i * 95 + 57))
                screen.blit(value_text, text_rect)

def draw_game_over():
    pygame.draw.rect(screen, 'black', [50, 50, 300, 100], 0, 10)
    game_over_text1 = pygame.font.Font('freesansbold.ttf', 40).render("Game over!", True, 'white')
    screen.blit(game_over_text1, (91, 82))

def draw_score(score):
    score_text = font.render(f'Score: {score}', True, 'black')
    screen.blit(score_text, (10,410))

def draw_vyhra(score):
    pygame.draw.rect(screen, 'yellow', [50, 50, 300, 110], 0, 10)
    vyhra_text1 = pygame.font.Font('freesansbold.ttf', 33).render("2048 dosaženo!", True, 'black')
    screen.blit(vyhra_text1, (80, 75))
    vyhra_text2 = font.render(f'Score: {score}', True, 'black')
    screen.blit(vyhra_text2, (80, 120))

def draw_reset():
    pygame.draw.rect(screen, 'black', [50, 170, 300, 100], 0, 10)
    reset_text1 = pygame.font.Font('freesansbold.ttf', 25).render("Nová hra:", True, 'white')
    screen.blit(reset_text1, (139,190))
    reset_text2 = pygame.font.Font('freesansbold.ttf', 25).render("Enter", True, 'white')
    screen.blit(reset_text2, (166, 224))


#hlavni cast
run = True
while run:
    timer.tick(fps)
    screen.fill('gray')
    draw_plocha()
    draw_kost(board_values)
    draw_score(score)
    if spawn_new or init_count<2:
        board_values = new_pieces(board_values)
        spawn_new = False
        init_count += 1
    if direction != ' ':
        board_values, pohyb, game_over, vyhra = take_turn(direction, board_values)
        direction = ' '
        spawn_new = pohyb
    if game_over:
        draw_game_over()
        draw_reset()
    if vyhra:
        draw_vyhra(score)
        draw_reset()



    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_UP:
                direction = 'UP'
            elif event.key == pygame.K_DOWN:
                direction = 'DOWN'
            elif event.key == pygame.K_RIGHT:
                direction = 'RIGHT'
            elif event.key == pygame.K_LEFT:
               direction = 'LEFT'
            elif event.key == pygame.K_RETURN:
                if vyhra or game_over:
                    board_values = [[0 for _ in range(4)] for _ in range(4)]
                    game_over = False
                    spawn_new = True
                    init_count = 0
                    direction = ' '
                    score = 0
                    vyhra = False

    pygame.display.flip()

pygame.quit
